#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.join(File.dirname(__FILE__), '../composite-tape-disk/lib'))


require 'store/utils'
require 'store/db'


Store::DB.setup('/opt/fda/etc/db.yml', 'silo_test')
root   = '/daitssfs/'
user   = 'silo'
server = 'silos.darchive.fcla.edu'


known_filesystems = Store::DB::SiloRecord.list(server).map{ |rec| rec.filesystem }.sort


puts "Known file systems: " + known_filesystems.join(', ')
puts


discovered_filesystems = []
Dir.open root do |fs|
  fs.sort.each do |subdir|
    target = File.join(root, subdir)
    next unless File.directory? target
    next unless subdir =~ %r{[a-f0-9]{3}}
    next unless StoreUtils.user(target) == user
    next unless target == StoreUtils.disk_mount_point(target)
    discovered_filesystems.push target 
  end
end
discovered_filesystems.sort!


puts "Discovered file systems: " + discovered_filesystems.join(', ')
puts

new_filesystems = discovered_filesystems - known_filesystems

puts "New file systems: " + new_filesystems.join(', ')


# now create the new silos....

known_filesystems.each do |fs|
  rec = Store::DB::SiloRecord.lookup server, fs
  puts fs + ' ' + rec.possible_methods.map{ |sym| sym.to_s }.sort.join(', ')
end

# new_filesystems.each do |fs|
#   rec = Store::DB::SiloRecord.create server, fs
#   rec.possible_methods.each { |meth| rec.forbid }
# end
