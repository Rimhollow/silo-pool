#!/usr/bin/env ruby

require 'store/tsmexecutor'
require 'store/utils'
require 'store/silo'
require 'fileutils'

def slashify str
  str.gsub(%r{/+$}, '') + '/'
end

tsm = Store::TsmExecutor.new('BERNARD_SERVER');

original_silo_root    = '/daitssfs/001'
destination_silo_root = '/var/daitss/tmp/tape-cache'

packages = [ 'E20060518_AAAAAQ', 'E20070909_AAAAQT', 'E20070919_AAAABB' ]   # last two are under same parent path

#
# /daitssfs/001/d11/1cf8d350e738e4d83d20249565479/
# /daitssfs/001/ccc/04c04dd2d1a030f24f1b98a166794/
# /daitssfs/001/ccc/9f62c4143fbed145549178e3164a0/
#

FileUtils.mkdir_p destination_silo_root

proxy_silo = Store::Silo.new(destination_silo_root)

packages.each do |name|
   source      = slashify(File.join(original_silo_root, StoreUtils.hashpath(name)))
   destination = slashify(File.join(proxy_silo.filesystem, StoreUtils.hashpath_parent(name)))

   # tivoli will create the datapath_parent part of the destination directory if asked politely.
   # we probably should not rely on it

   tsm.restore(source, destination)
   if tsm.status != 0
      puts "status: #{tsm.status}"
      tsm.output.each { |line| puts "output: #{line}" }
      tsm.errors.each { |line| puts "errors: #{line}" }
   else
      puts "#{source} success!"
   end
end

proxy_silo.each do |name| 
  puts "Proxy silo found #{name}."
end


